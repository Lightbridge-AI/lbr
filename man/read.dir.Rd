% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read.dir.R
\name{read.dir}
\alias{read.dir}
\title{Read files form a directory by a given function}
\usage{
read.dir(
  fun,
  path = ".",
  pattern = "\\\\.csv$",
  ...,
  invert = F,
  ignore.case = F,
  perl = F,
  fixed = F,
  all.files = F,
  recursive = F,
  no.. = F,
  snake_case = F
)
}
\arguments{
\item{fun}{A function to read files from a directory. First argument of the function must be file path.
Example : \code{utils::read.csv}, \code{readr::read_csv}, \code{rio::import}, \code{readxl::read_excel}, \code{base::readRDS}}

\item{path}{Character: Path to desired directory which contain file, default is "." working directory. (passed to \code{base::list.files})}

\item{pattern}{Character: Specify regular expression to match file extension and file names. (passed to \code{grep()}) .
Default is to read .csv file "\\.csv$". Please select according to \code{fun}; Example, use \verb{\\\\.xlsx$} to read from excel file.}

\item{...}{Argument to pass to \code{fun}}

\item{invert}{Logical: If \code{TRUE} read from file that file names do not match \code{pattern}.(passed to \code{grep()})}

\item{ignore.case}{If FALSE, the regular expression matching is case sensitive and if \code{TRUE}, case is ignored during matching.(passed to \code{grep()})}

\item{perl}{Logical: Should Perl-compatible regexps be used? (passed to \code{grep()})}

\item{fixed}{Logical: If \code{TRUE}, pattern is a string to be matched as is. Overrides all conflicting arguments.}

\item{all.files}{If \code{TRUE} hidden files are also returned. (passed to \code{base::list.files})}

\item{recursive}{If \code{TRUE} read recursively in sub-directory.(passed to \code{base::list.files})}

\item{no..}{logical. Should both "." and ".." be excluded also from non-recursive listings? (passed to \code{base::list.files})}

\item{snake_case}{If \code{TRUE}: Convert names to snake_case_format.  (require \code{snakecase} package)}
}
\value{
A list of object returned by \code{fun}
}
\description{
Read multiple files from a directory (folder) using reading engine supply by a function.
}
\examples{
# Not run
if(FALSE){

 # Read .csv file form working directory (default) using `utils::read.csv`.
 ## file names are set to each elements of the output.

   read.dir(utils::read.csv) # default `pattern` is "\\.csv$"

 # Read .xlsx file from a directory using `readxl::read_excel`.
 ## Must specify regular expression to match file extension.

   read.dir(readxl::read_excel, path = "path/to/dir" ,pattern = "\\\\.xlsx$")

 # Read .rds file ; To also read form sub-directory set `recursive = TRUE` .

   read.dir(readRDS, pattern = "\\\\.rds$", path = "path/to/dir" ,recursive = TRUE)

 # Read files using multiple engine from multiple path and multiple file extension.

   params <- list(fun = c(read_csv, readxl::read_excel),
                path = c("path/to/dir_1", "path/to/dir_2"),
                pattern = c("\\\\.csv$", "\\\\.xlsx$"))

   purrr::pmap(params, read.dir)

   # or using base R

   ls <- vector("list", 2)

   for(i in seq_along(params[[1]])){

     ls[[i]]  <- read.dir(fun = params[[1]][[i]],  path = params[[2]][[i]],
                          pattern = params[[3]][[i]])
   }
}
}
