% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rd.R
\name{rd}
\alias{rd}
\title{Read files form a directory by a given function}
\usage{
rd(
  .f,
  path = ".",
  pattern = "\\\\.csv$",
  ...,
  invert = F,
  ignore.case = F,
  perl = F,
  fixed = F,
  all.files = F,
  recursive = F,
  no.. = F,
  snake_case = F
)
}
\arguments{
\item{.f}{A function to read files from a directory. First argument of the function must be file path. Support formula interface.
Example : \code{utils::read.csv}, \code{readr::read_csv}, \code{rio::import}, \code{readxl::read_excel}, \code{base::readRDS}}

\item{path}{Character: Path to desired directory which contain file, default is "." working directory. (passed to \code{base::list.files})}

\item{pattern}{Character: Specify regular expression to match file extension and file names. (passed to \code{grep()}) .
Default is to read .csv file "\\.csv$". Please select according to \code{fun}; Example, use \verb{\\\\.xlsx$} to read from excel file.}

\item{...}{Argument to pass to \code{.f}}

\item{invert}{Logical: If \code{TRUE} read from file that file names do not match \code{pattern}.(passed to \code{grep()})}

\item{ignore.case}{If FALSE, the regular expression matching is case sensitive and if \code{TRUE}, case is ignored during matching.(passed to \code{grep()})}

\item{perl}{Logical: Should Perl-compatible regexps be used? (passed to \code{grep()})}

\item{fixed}{Logical: If \code{TRUE}, pattern is a string to be matched as is. Overrides all conflicting arguments.}

\item{all.files}{If \code{TRUE} hidden files are also returned. (passed to \code{base::list.files})}

\item{recursive}{If \code{TRUE} read recursively in sub-directory.(passed to \code{base::list.files})}

\item{no..}{logical. Should both "." and ".." be excluded also from non-recursive listings? (passed to \code{base::list.files})}

\item{snake_case}{If \code{TRUE}: Convert names to snake_case_format.  (require \code{snakecase} package)}
}
\description{
Read multiple files from a directory (folder) using reading engine supply by a function.
}
\examples{
 if(FALSE){ "Under development" }
}
